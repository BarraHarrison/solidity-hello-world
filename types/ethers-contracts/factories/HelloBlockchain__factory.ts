/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { HelloBlockchain, HelloBlockchainInterface } from "../HelloBlockchain.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "initialMessage",
        "type": "string"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "oldMessage",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "newMessage",
        "type": "string"
      }
    ],
    "name": "MessageUpdated",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "getMessage",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "newMessage",
        "type": "string"
      }
    ],
    "name": "updateMessage",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b50604051610c09380380610c0983398181016040528101906100319190610193565b805f908161003f91906103ea565b50506104b9565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100a58261005f565b810181811067ffffffffffffffff821117156100c4576100c361006f565b5b80604052505050565b5f6100d6610046565b90506100e2828261009c565b919050565b5f67ffffffffffffffff8211156101015761010061006f565b5b61010a8261005f565b9050602081019050919050565b8281835e5f83830152505050565b5f610137610132846100e7565b6100cd565b9050828152602081018484840111156101535761015261005b565b5b61015e848285610117565b509392505050565b5f82601f83011261017a57610179610057565b5b815161018a848260208601610125565b91505092915050565b5f602082840312156101a8576101a761004f565b5b5f82015167ffffffffffffffff8111156101c5576101c4610053565b5b6101d184828501610166565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061022857607f821691505b60208210810361023b5761023a6101e4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261029d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610262565b6102a78683610262565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6102eb6102e66102e1846102bf565b6102c8565b6102bf565b9050919050565b5f819050919050565b610304836102d1565b610318610310826102f2565b84845461026e565b825550505050565b5f5f905090565b61032f610320565b61033a8184846102fb565b505050565b5b8181101561035d576103525f82610327565b600181019050610340565b5050565b601f8211156103a25761037381610241565b61037c84610253565b8101602085101561038b578190505b61039f61039785610253565b83018261033f565b50505b505050565b5f82821c905092915050565b5f6103c25f19846008026103a7565b1980831691505092915050565b5f6103da83836103b3565b9150826002028217905092915050565b6103f3826101da565b67ffffffffffffffff81111561040c5761040b61006f565b5b6104168254610211565b610421828285610361565b5f60209050601f831160018114610452575f8415610440578287015190505b61044a85826103cf565b8655506104b1565b601f19841661046086610241565b5f5b8281101561048757848901518255600182019150602085019450602081019050610462565b868310156104a457848901516104a0601f8916826103b3565b8355505b6001600288020188555050505b505050505050565b610743806104c65f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80631923be2414610038578063ce6d41de14610054575b5f5ffd5b610052600480360381019061004d919061033c565b610072565b005b61005c610160565b60405161006991906103e3565b60405180910390f35b5f5f805461007f90610430565b80601f01602080910402602001604051908101604052809291908181526020018280546100ab90610430565b80156100f65780601f106100cd576101008083540402835291602001916100f6565b820191905f5260205f20905b8154815290600101906020018083116100d957829003601f168201915b50505050509050815f908161010b9190610609565b503373ffffffffffffffffffffffffffffffffffffffff167f58191645bad5b59703b95019894a69f289950af77b37e09f569ed86ceb33f18582846040516101549291906106d8565b60405180910390a25050565b60605f805461016e90610430565b80601f016020809104026020016040519081016040528092919081815260200182805461019a90610430565b80156101e55780601f106101bc576101008083540402835291602001916101e5565b820191905f5260205f20905b8154815290600101906020018083116101c857829003601f168201915b5050505050905090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61024e82610208565b810181811067ffffffffffffffff8211171561026d5761026c610218565b5b80604052505050565b5f61027f6101ef565b905061028b8282610245565b919050565b5f67ffffffffffffffff8211156102aa576102a9610218565b5b6102b382610208565b9050602081019050919050565b828183375f83830152505050565b5f6102e06102db84610290565b610276565b9050828152602081018484840111156102fc576102fb610204565b5b6103078482856102c0565b509392505050565b5f82601f83011261032357610322610200565b5b81356103338482602086016102ce565b91505092915050565b5f60208284031215610351576103506101f8565b5b5f82013567ffffffffffffffff81111561036e5761036d6101fc565b5b61037a8482850161030f565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6103b582610383565b6103bf818561038d565b93506103cf81856020860161039d565b6103d881610208565b840191505092915050565b5f6020820190508181035f8301526103fb81846103ab565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061044757607f821691505b60208210810361045a57610459610403565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610481565b6104c68683610481565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61050a610505610500846104de565b6104e7565b6104de565b9050919050565b5f819050919050565b610523836104f0565b61053761052f82610511565b84845461048d565b825550505050565b5f5f905090565b61054e61053f565b61055981848461051a565b505050565b5b8181101561057c576105715f82610546565b60018101905061055f565b5050565b601f8211156105c15761059281610460565b61059b84610472565b810160208510156105aa578190505b6105be6105b685610472565b83018261055e565b50505b505050565b5f82821c905092915050565b5f6105e15f19846008026105c6565b1980831691505092915050565b5f6105f983836105d2565b9150826002028217905092915050565b61061282610383565b67ffffffffffffffff81111561062b5761062a610218565b5b6106358254610430565b610640828285610580565b5f60209050601f831160018114610671575f841561065f578287015190505b61066985826105ee565b8655506106d0565b601f19841661067f86610460565b5f5b828110156106a657848901518255600182019150602085019450602081019050610681565b868310156106c357848901516106bf601f8916826105d2565b8355505b6001600288020188555050505b505050505050565b5f6040820190508181035f8301526106f081856103ab565b9050818103602083015261070481846103ab565b9050939250505056fea2646970667358221220f3917f032ff0cd6e781757393814af6a2761dd24705351a6367ca1809cf3a71e64736f6c634300081c0033";

  
      type HelloBlockchainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: HelloBlockchainConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class HelloBlockchain__factory extends ContractFactory {
    
      constructor(...args: HelloBlockchainConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(initialMessage: string, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(initialMessage, overrides || {});
    };
    override deploy(initialMessage: string, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(initialMessage, overrides || {}) as Promise<HelloBlockchain & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): HelloBlockchain__factory {
      return super.connect(runner) as HelloBlockchain__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): HelloBlockchainInterface {
      return new Interface(_abi) as HelloBlockchainInterface;
    }
    
    override attach(address: string | Addressable): HelloBlockchain {
      return super.attach(address) as HelloBlockchain;
    }
  static connect(address: string, runner?: ContractRunner | null): HelloBlockchain {
      return new Contract(address, _abi, runner) as unknown as HelloBlockchain;
    }
  }

  
  